diff -ur ghc-7.2.1-winpaths/docs/users_guide/ghci.xml ghc-7.2.1/docs/users_guide/ghci.xml
--- ghc-7.2.1-winpaths/docs/users_guide/ghci.xml	2011-09-26 17:55:05.824214356 +0200
+++ ghc-7.2.1/docs/users_guide/ghci.xml	2011-08-07 19:10:05.000000000 +0200
@@ -126,7 +126,7 @@
     directory of the shell from which it was started.  If you started
     GHCi from the &ldquo;Start&rdquo; menu in Windows, then the
     current directory is probably something like
-    <filename>C:\Documents and Settings\<replaceable>user
+    <filename>C:\\Documents and Settings\\<replaceable>user
     name</replaceable></filename>.</para> </footnote> then we will
     need to change to the right directory in GHCi:</para>
 
diff -ur ghc-7.2.1-winpaths/docs/users_guide/packages.xml ghc-7.2.1/docs/users_guide/packages.xml
--- ghc-7.2.1-winpaths/docs/users_guide/packages.xml	2011-09-26 17:56:23.484450567 +0200
+++ ghc-7.2.1/docs/users_guide/packages.xml	2011-08-07 19:10:05.000000000 +0200
@@ -396,7 +396,7 @@
           systems this will be
           <filename>$HOME/.ghc/<replaceable>arch</replaceable>-<replaceable>os</replaceable>-<replaceable>version</replaceable>/package.conf.d</filename>, and on
           Windows it will be something like
-          <filename>C:\Documents&nbsp;And&nbsp;Settings\<replaceable>user</replaceable>\ghc\package.conf.d</filename>.
+          <filename>C:\\Documents&nbsp;And&nbsp;Settings\\<replaceable>user</replaceable>\\ghc\\package.conf.d</filename>.
           The <literal>ghc-pkg</literal> tool knows where this file should be
           located, and will create it if it doesn't exist (see <xref linkend="package-management" />).</para>
       </listitem>
diff -ur ghc-7.2.1-winpaths/docs/users_guide/using.xml ghc-7.2.1/docs/users_guide/using.xml
--- ghc-7.2.1-winpaths/docs/users_guide/using.xml	2011-09-26 17:58:56.791496986 +0200
+++ ghc-7.2.1/docs/users_guide/using.xml	2011-08-07 19:10:05.000000000 +0200
@@ -72,7 +72,7 @@
       by directory separators).  For example, the
       module <literal>Data.Person</literal> would be in the
       file <filename>Data/Person.hs</filename> on Unix/Linux/Mac,
-      or <filename>Data\Person.hs</filename> on Windows.
+      or <filename>Data\\Person.hs</filename> on Windows.
     </para>
   </sect1>
 
diff -ur ghc-7.2.1-winpaths/docs/users_guide/win32-dlls.xml ghc-7.2.1/docs/users_guide/win32-dlls.xml
--- ghc-7.2.1-winpaths/docs/users_guide/win32-dlls.xml	2011-09-26 17:58:03.182366314 +0200
+++ ghc-7.2.1/docs/users_guide/win32-dlls.xml	2011-08-07 19:10:05.000000000 +0200
@@ -14,7 +14,7 @@
 Be aware of that <command>ghc</command> and <command>ghci</command> do
 require filenames containing spaces to be escaped using quotes:
 <programlisting>
-  c:\ghc\bin\ghci "c:\\Program Files\\Haskell\\Project.hs"
+  c:\\ghc\\bin\\ghci "c:\\Program Files\\Haskell\\Project.hs"
 </programlisting>
 If the quotes are left off in the above command, <command>ghci</command> will
 interpret the filename as two, "c:\\Program" and "Files\\Haskell\\Project.hs".
@@ -134,13 +134,13 @@
 unix-style API on top of the windows libraries, to facilitate ports of
 unix software to windows. To this end, they introduce a unix-style
 directory hierarchy under some root directory (typically
-<filename>/</filename> is <filename>C:\cygwin\</filename>). Moreover,
+<filename>/</filename> is <filename>C:\\cygwin\\</filename>). Moreover,
 everything built against the cygwin API (including the cygwin tools
 and programs compiled with cygwin's ghc) will see / as the root of
 their file system, happily pretending to work in a typical unix
 environment, and finding things like <filename>/bin</filename> and <filename>/usr/include</filename> without
 ever explicitly bothering with their actual location on the windows
-system (probably <filename>C:\cygwin\bin</filename> and <filename>C:\cygwin\usr\include</filename>).
+system (probably <filename>C:\\cygwin\\bin</filename> and <filename>C:\\cygwin\\usr\\include</filename>).
 </para>
 </sect2>
 
